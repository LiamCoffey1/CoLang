/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.7.2")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1.1-jre")
    // https://mvnrepository.com/artifact/io.netty/netty-all
    // https://mvnrepository.com/artifact/io.netty/netty-all
    implementation("io.netty:netty-all:4.1.24.Final")


}

application {
    // Define the main class for the application.
    mainClass.set("colang.App")

    // Provide a default web root for development runs. Can be overridden by:
    //   -Pcolang.webroot=... (project property), or environment COLANG_WEBROOT, or JVM arg -Dcolang.webroot=...
    val defaultWebRoot = (findProperty("colang.webroot") as String?)
        ?: System.getenv("COLANG_WEBROOT")
        ?: layout.projectDirectory.dir("dist").asFile.absolutePath
    applicationDefaultJvmArgs = listOf("-Dcolang.webroot=$defaultWebRoot")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
